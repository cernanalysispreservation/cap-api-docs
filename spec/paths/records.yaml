summary: Represents a record
description: >
  This resource represents an individual published record in the system. Each
  record is identified by a UUID `recid`.
get:
  tags:
    - Records
    - Search
  summary: Retrieve a list of records
  description: >-
    Query published records.
    > You need to have at least 'read' access to query them.
  operationId: get_records
  parameters:
    - $ref: '#/components/parameters/query'
    - $ref: '#/components/parameters/sort'
    - $ref: '#/components/parameters/page'
    - $ref: '#/components/parameters/size'
  responses:
    '200':
      description: OK
      headers:
        X-Rate-Limit:
          description: calls per hour allowed by the user
          schema:
            type: integer
            format: int32
        X-Expires-After:
          $ref: '#/components/headers/ExpiresAfter'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Record'
          example:
            username: user1
            email: user@example.com
    '401':
      description: Unauthorized
      headers:
        X-Rate-Limit:
          description: calls per hour allowed by the user
          schema:
            type: integer
            format: int32
        X-Expires-After:
          $ref: '#/components/headers/ExpiresAfter'
      content:
        application/json:
          schema:
            type: string
          examples:
            response:
              value: Hello world!
post:
  tags:
    - Records
  summary: Create a record
  description: Create a record.
  operationId: create_record
  responses:
    '200':
      description: OK
      headers:
        X-Rate-Limit:
          description: calls per hour allowed by the user
          schema:
            type: integer
            format: int32
        X-Expires-After:
          $ref: '#/components/headers/ExpiresAfter'
      content:
        application/json:
          schema:
            type: string
          examples:
            response:
              value: Hello world!
        application/xml:
          schema:
            type: string
        text/csv:
          schema:
            type: string
  requestBody:
    content:
      application/json:
        schema:
          type: string
          example: Hello world!
      application/xml:
        schema:
          type: string
          example: Hello world!
    description: Echo payload
    required: true
